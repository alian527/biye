library(dplyr)
library(ggplot2)
library(readxl)
library(gridExtra)
rm(list = ls())#清空数据
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
df <- read_excel("原始数据.xlsx")
df1=df[,]
cor_test_an <- cor.test(df1$BMI[df1$group == "AN"], df1$LEP[df1$group == "AN"])
cor_test_hc <- cor.test(df1$BMI[df1$group == "HC"], df1$LEP[df1$group == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
df1$group[df1$group == "AN"] <- an1
df1$group[df1$group == "HC"] <- hc1
g1=ggplot(df1, aes(BMI, LEP, color = group)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(df1$LEP))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
g1
X=df1$BMI
Y=df1$LEP
Z=df1$group
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(BMI, LEP, color = group)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
library(foreign)
library(ggplot2)
library(grid)
library(gridExtra)
library(ggpubr)
library(cowplot)
library(ggplot2)
library(readxl)
library(graphics)
library(PerformanceAnalytics)
library(sjPlot)
library(reshape2)
library(dplyr)
library(ggplot2)
library(readxl)
library(gridExtra)
rm(list = ls())#清空数据
df <- read_excel("原始数据.xlsx")
df1=df[,]
X=df1$BMI
Y=df1$LEP
Z=df1$group
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(BMI, LEP, color = group)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
g1
X=df1$BMI#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(BMI, LEP, color = group)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
X=df1$Age#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(BMI, LEP, color = group)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
df1$`Global score`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(BMI, LEP, color = group)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
X=`Global score`#横轴
cor_test_an <- cor.test(X[df1$Z == "AN"], Y[df1$Z == "AN"])
X=Global score#横轴
df <- read_excel("原始数据.xlsx")
df1=df[,]
X=`Global score`#横轴
Y=LEP#纵轴
X=df1$`Global score`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
library(foreign)
library(ggplot2)
library(grid)
library(gridExtra)
library(ggpubr)
library(cowplot)
library(ggplot2)
library(readxl)
library(graphics)
library(PerformanceAnalytics)
library(sjPlot)
library(reshape2)
library(dplyr)
library(ggplot2)
library(readxl)
library(gridExtra)
rm(list = ls())#清空数据
df <- read_excel("原始数据.xlsx")
df1=df[,]
X=df1$`Global score`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = 'BMI(kg/m2)', y = 'TNF-a expression (ng/ml)')
g1
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
df <- read_excel("原始数据.xlsx")
df1=df[,]
X=df1$`Global score`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
Xm="Global score"
Ym=“LEP”
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
windows(width = 8, height =6)
grid.arrange(g1, g2, g3,g4)
X=df1$`Global score`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
Xm="Global score"
Ym=“LEP”
Xm="Global score"
Ym=“LEP”
X=df1$`Global score`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
Xm="Global score"
Ym="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
Y=df1$`Global score`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym="Global score"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
Y=df1$`Global score`#横轴
X=df1$GHSR#纵轴
Z=df1$group#不同分组
Ym="Global score"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
rm(list = ls())#清空数据
library(foreign)
library(ggplot2)
library(grid)
library(gridExtra)
library(ggpubr)
library(cowplot)
library(ggplot2)
library(readxl)
library(graphics)
library(PerformanceAnalytics)
library(sjPlot)
library(reshape2)
library(dplyr)
library(ggplot2)
library(readxl)
library(gridExtra)
df <- read_excel("原始数据.xlsx")
df1=df[,]
Y=df1$`Global score`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym="Global score"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
g1
Y=df1$`Global score`#横轴
X=df1$#纵轴
Z=df1$group#不同分组
Ym="Global score"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
Y=df1$`Global score`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym="Global score"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
#LEP和EDEQ总分的相关性
Y=df1$`emotional abuse`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym=`emotional abuse`
Y=df1$`emotional abuse`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym=`emotional abuse`
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym=`emotional abuse`
#LEP和EDEQ总分的相关性
Y=df1$`emotional abuse`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym="emotional abuse"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
#LEP和EDEQ总分的相关性
X=df1$`emotional abuse`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
Xm="emotional abuse"
Ym="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
#LEP和EDEQ总分的相关性
X=df1$`emotional abuse`#横轴
Y=df1$LEP#纵轴
Z=df1$group#不同分组
Xm="emotional abuse"
Ym="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(min(Y), 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
#LEP和EDEQ总分的相关性
Y=df1$`Global score`#横轴
X=df1$LEP#纵轴
Z=df1$group#不同分组
Ym="Global score"
Xm="LEP"
cor_test_an <- cor.test(X[Z == "AN"], Y[Z == "AN"])
cor_test_hc <- cor.test(X[Z == "HC"], Y[Z == "HC"])
an1=paste("AN","r =",round(cor_test_an$estimate, 2),"p =",round(cor_test_an$p.value, 3),"**")
hc1=paste("HC","r =",round(cor_test_hc$estimate, 2),"p =",round(cor_test_hc$p.value, 3))
Z[Z == "AN"] <- an1
Z[Z == "HC"] <- hc1
g1=ggplot(df1, aes(X, Y, color = Z)) +
geom_point() +
geom_smooth(method = "lm", se = TRUE) +
labs(color = "Group") +
scale_y_continuous(limits = c(0, NA)) +
scale_color_manual(values = c("red", "blue")) +
theme_classic() +
scale_y_continuous(expand = c(0, 0), limits = c(0, 1.1 * max(Y))) +
theme(legend.position = c(0.7, 0.85))+
labs(x = Xm, y = Ym)
g1
rm(list = ls())#清空数据
library(foreign)
library(ggplot2)
library(grid)
library(gridExtra)
library(ggpubr)
library(cowplot)
library(ggplot2)
library(readxl)
library(graphics)
library(PerformanceAnalytics)
library(sjPlot)
library(reshape2)
library(dplyr)
library(ggplot2)
library(readxl)
library(gridExtra)
df <- read_excel("原始数据.xlsx")
df1=df[,]
