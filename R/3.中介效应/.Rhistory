# 在路径图上添加文本
text(x = c(0.2, 0.8), y = c(0.2, 0.5), labels = c("Text 1", "Text 2"), col = "red", cex = 1.5)
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file
grid.text("Additional Text 1", x = 0.5, y = 0.8, gp = gpar(col = "red", fontsize = 12))
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "Additional Text 1", col = "red", cex = 1.5)
text(x = 0.5, y = 0.2, labels = "Additional Text 2", col = "blue", cex = 1.5)
dev.off()
dev.off()
df <- read_excel("结构方程.xlsx")
library(svglite)
library(semPlot)
library(semTools)
library(lavaan)
library(writexl)
library(mediation)
library(readxl)
rm(list = ls())
df <- read_excel("结构方程.xlsx")
df <- subset(df, group == "AN")
#df <- subset(df, type == "AN-R")
# 查看生成的数据前几行
head(df)
data <- data.frame(
EmotionalAbuse = df$`emotional abuse`,
Cohesion = df$cohesion,
LEPMethylation = df$LEP,
GlobalScore = df$`Global score`)
# 定义中介模型
model <- '
LEPMethylation ~~ EmotionalAbuse
LEPMethylation ~~ Cohesion
# 因变量路径
GlobalScore ~ c*EmotionalAbuse + b*LEPMethylation + d*Cohesion
# c表示f1对y的直接效应，b表示m对y的直接效应，d表示f2对y的直接效应
indirect := c*b  # 定义中介效应
'
# 拟合模型
fit <- sem(model, data = data)
# 绘制路径图
# Plot the SEM paths with legend and specify legend background color
path_plot <- semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "Additional Text 1", col = "red", cex = 1.5)
text(x = 0.5, y = 0.2, labels = "Additional Text 2", col = "blue", cex = 1.5)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS：EDE-Q GlobalScore", col = "red", cex = 0.5)
text(x = 0.5, y = 0.2, labels = "Chs：FES-CV Cohesion", col = "blue", cex = 1.5)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "red", cex = 0.5)
text(x = 0.5, y = 0.2, labels = "Chs:FES-CV Cohesion", col = "blue", cex = 1.5)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "red", cex = 1)
text(x = 0.5, y = 0.2, labels = "Chs:FES-CV Cohesion", col = "blue", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.5, y = 0.2, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 0.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.5, y = 0.2, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.5, y = 0, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.5, y = -2, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.5, y = -1, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.5, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.5, y = -1.5, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.7, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.7, y = -1.5, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.5, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.7, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.7, y = -1.5, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.7, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = -1.5, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.7, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = -1.5, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.9, y = 1.2, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.4, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = 0.2, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.9, y = 1.6, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.4, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = 0.2, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.9, y =0.6, labels = "LEP:LEP methylation level", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.2, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = 0.4, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.9, y =0.6, labels = "LEP:LEP methylation level", col = "black", cex = 1)
text(x = 0.9, y =0.8, labels = "ETI: Emotional Abuse", col = "black", cex = 1)
dev.off()
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = 0.6, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.9, y =0.4, labels = "LEP:LEP methylation level", col = "black", cex = 1)
text(x = 0.9, y =0.2, labels = "ETI: Emotional Abuse", col = "black", cex = 1)
dev.off()
library(svglite)
library(semPlot)
library(semTools)
library(lavaan)
library(writexl)
library(mediation)
library(readxl)
rm(list = ls())
df <- read_excel("结构方程.xlsx")
df <- subset(df, group == "AN")
#df <- subset(df, type == "AN-R")
# 查看生成的数据前几行
head(df)
data <- data.frame(
EmotionalAbuse = df$`emotional abuse`,
Cohesion = df$cohesion,
LEPMethylation = df$LEP,
GlobalScore = df$`Global score`)
# 定义中介模型
model <- '
LEPMethylation ~~ EmotionalAbuse
LEPMethylation ~~ Cohesion
# 因变量路径
GlobalScore ~ c*EmotionalAbuse + b*LEPMethylation + d*Cohesion
# c表示f1对y的直接效应，b表示m对y的直接效应，d表示f2对y的直接效应
indirect := c*b  # 定义中介效应
'
# 拟合模型
fit <- sem(model, data = data)
# 绘制路径图
# Plot the SEM paths with legend and specify legend background color
path_plot <- semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1)
text(x = 0.9, y = 0.6, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1)
text(x = 0.9, y =0.4, labels = "LEP:LEP methylation level", col = "black", cex = 1)
text(x = 0.9, y =0.2, labels = "ETI: Emotional Abuse", col = "black", cex = 1)
dev.off()
library(svglite)
library(semPlot)
library(semTools)
library(lavaan)
library(writexl)
library(mediation)
library(readxl)
rm(list = ls())
function (..., list = character(), package = NULL, lib.loc = NULL,
verbose = getOption("verbose"), envir = .GlobalEnv, overwrite = TRUE)
library(svglite)
library(semPlot)
library(semTools)
library(lavaan)
library(writexl)
library(mediation)
library(readxl)
rm(list = ls())
df <- read_excel("结构方程.xlsx")
df <- subset(df, group == "AN")
#df <- subset(df, type == "AN-R")
# 查看生成的数据前几行
head(df)
data <- data.frame(
EmotionalAbuse = df$`emotional abuse`,
Cohesion = df$cohesion,
LEPMethylation = df$LEP,
GlobalScore = df$`Global score`)
# 定义中介模型
model <- '
LEPMethylation ~~ EmotionalAbuse
LEPMethylation ~~ Cohesion
# 因变量路径
GlobalScore ~ c*EmotionalAbuse + b*LEPMethylation + d*Cohesion
# c表示f1对y的直接效应，b表示m对y的直接效应，d表示f2对y的直接效应
indirect := c*b  # 定义中介效应
'
# 拟合模型
fit <- sem(model, data = data)
# 绘制路径图
# Plot the SEM paths with legend and specify legend background color
path_plot <- semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Save the path plot as an SVG file
svg("output_path_plot.svg", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1,adj = 0)
text(x = 0.9, y = 0.6, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1,adj = 0)
text(x = 0.9, y =0.4, labels = "LEP:LEP methylation level", col = "black", cex = 1,adj = 0)
text(x = 0.9, y =0.2, labels = "ETI: Emotional Abuse", col = "black", cex = 1,adj = 0)
dev.off()
# Save the path plot as an SVG file
pdf("output_plot.pdf", width = 10, height = 5)
semPaths(
fit,
whatLabels = "est.std",
style = "lisrel",
layout = "tree2",
edge.label.cex = 1,
intStyle = "multi",
intercepts = FALSE,
rotation = 3
)
# Add text to the SVG file using the base R text function
text(x = 0.9, y = 0.8, labels = "GlS:EDE-Q GlobalScore", col = "black", cex = 1,adj = 0)
text(x = 0.9, y = 0.6, labels = "Chs:FES-CV Cohesion", col = "black", cex = 1,adj = 0)
text(x = 0.9, y =0.4, labels = "LEP:LEP methylation level", col = "black", cex = 1,adj = 0)
text(x = 0.9, y =0.2, labels = "ETI: Emotional Abuse", col = "black", cex = 1,adj = 0)
dev.off()
