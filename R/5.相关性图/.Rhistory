library(graphics)
library(PerformanceAnalytics)
library(sjPlot)
library(reshape2)
library(dplyr)
library(ggplot2)
library(readxl)
rm(list = ls())#清空数据
#函数部分
splitheatmap <- function(df1, m, method, n) {
x <- ncol(df1)
var1 <- colnames(df1)[1:m]
var2 <- colnames(df1)[(m+1):x]
cor_matrix <- matrix(NA, nrow = x - m, ncol = m)
pvalue_matrix <- matrix(NA, nrow = x - m, ncol = m)
for (i in 1:m) {
for (j in 1:(x - m)) {
if (method == "pearson") {
cor_test <- cor.test(df1[, var1[i]], df1[, var2[j]])
} else if (method == "spearman") {
cor_test <- cor.test(df1[, var1[i]], df1[, var2[j]], method = "spearman")
} else {
cat("Invalid value for 'method'. Please use 'pearson' or 'spearman'.")
return(NULL)
}
cor_matrix[j, i] <- cor_test$estimate
pvalue_matrix[j, i] <- cor_test$p.value
}
}
o <- colnames(df1[, 1:m])
p <- colnames(df1[, (m + 1):x])
cor_matrix <- data.frame(cor_matrix)
row.names(cor_matrix) <- p
names(cor_matrix) <- o
cor_matrix <- as.matrix(cor_matrix)
if (n == 1) {
cor <- reshape2::melt(cor_matrix, na.rm = TRUE)
pval <- reshape2::melt(pvalue_matrix, na.rm = TRUE)
corr <- cbind(cor, pval[, 3])
names(corr) <- c("y", "x", "c", "z")
s <- ggplot2::ggplot(data = corr, ggplot2::aes(x, y, fill = c)) +
ggplot2::geom_tile() +
ggplot2::scale_fill_gradient2(
low = "blue", high = "red", mid = "white", midpoint = 0,
limit = c(-1, 1), space = "Lab", name = "Correlation"
) +
ggplot2::theme_minimal() +
ggplot2::theme(
axis.text.x = ggplot2::element_text(
angle = 45, vjust = 1, size = 12, hjust = 1
)
) +
ggplot2::coord_fixed() +
ggplot2::geom_text(
aes(
label = dplyr::case_when(
z > 0.01 & z <= 0.05 ~ "*",
z > 0.001 & z <= 0.01 ~ "**",
z <= 0.001 ~ "***",
TRUE ~ ""
)
),
color = "black", size = 10
)
print(s)
} else if (n == 2) {
cat("\nCorrelation Matrix:\n")
print(cor_matrix)
} else if (n == 3) {
cat("\nP-value Matrix:\n")
print(pvalue_matrix)
} else {
cat("Invalid value for 'n'. Please use 1 for heatmap, 2 for correlation matrix, or 3 for p-value matrix.")
}
}
df <- read_excel("原始数据.xlsx")
df1=df[1:36,c(5,11,12:20,24:27)]
df <- read_excel("原始数据.xlsx")
df1=df[]
#df1=df1[-3,]
#df1=df[37:68,c(5,12:20,24:27)]
#df1=df[1:68,c(5,12:20,24:27)]
df1 <- data.frame(lapply(df1, as.numeric))
df <- read_excel("原始数据.xlsx")
df1=df
#df1=df1[-3,]
#df1=df[37:68,c(5,12:20,24:27)]
#df1=df[1:68,c(5,12:20,24:27)]
df1 <- data.frame(lapply(df1, as.numeric))
df <- read_excel("原始数据.xlsx")
df1=df
#df1=df1[-3,]
#df1=df[37:68,c(5,12:20,24:27)]
#df1=df[1:68,c(5,12:20,24:27)]
View(df1)
df <- read_excel("原始数据.xlsx")
df1=df[,c(1:29)]
#df1=df1[-3,]
#df1=df[37:68,c(5,12:20,24:27)]
#df1=df[1:68,c(5,12:20,24:27)]
View(df1)
t=splitheatmap(df1,11,"spearman",1)
View(df1)
df2=df1[,c(4;29)]
df2=df1[,c(4:29)]
chart.Correlation(df2,main = "Correlation Matrix",
xlab = "Variables",
ylab = "Variables",method ="spearman")
View(df1)
df2=df1[,c(19:29)]
chart.Correlation(df2,main = "Correlation Matrix",
xlab = "Variables",
ylab = "Variables",method ="spearman")
df2=df1[,c(19:27)]
chart.Correlation(df2,main = "Correlation Matrix",
xlab = "Variables",
ylab = "Variables",method ="spearman")
df2=df1[,c(1:27)]
chart.Correlation(df2,main = "Correlation Matrix",
xlab = "Variables",
ylab = "Variables",method ="spearman")
df2=df1[,c(4:27)]
chart.Correlation(df2,main = "Correlation Matrix",
xlab = "Variables",
ylab = "Variables",method ="spearman")
library(graphics)
library(PerformanceAnalytics)
library(sjPlot)
library(reshape2)
library(dplyr)
library(ggplot2)
library(readxl)
rm(list = ls())#清空数据
#函数部分
splitheatmap <- function(df1, m, method, n) {
x <- ncol(df1)
var1 <- colnames(df1)[1:m]
var2 <- colnames(df1)[(m+1):x]
cor_matrix <- matrix(NA, nrow = x - m, ncol = m)
pvalue_matrix <- matrix(NA, nrow = x - m, ncol = m)
for (i in 1:m) {
for (j in 1:(x - m)) {
if (method == "pearson") {
cor_test <- cor.test(df1[, var1[i]], df1[, var2[j]])
} else if (method == "spearman") {
cor_test <- cor.test(df1[, var1[i]], df1[, var2[j]], method = "spearman")
} else {
cat("Invalid value for 'method'. Please use 'pearson' or 'spearman'.")
return(NULL)
}
cor_matrix[j, i] <- cor_test$estimate
pvalue_matrix[j, i] <- cor_test$p.value
}
}
o <- colnames(df1[, 1:m])
p <- colnames(df1[, (m + 1):x])
cor_matrix <- data.frame(cor_matrix)
row.names(cor_matrix) <- p
names(cor_matrix) <- o
cor_matrix <- as.matrix(cor_matrix)
if (n == 1) {
cor <- reshape2::melt(cor_matrix, na.rm = TRUE)
pval <- reshape2::melt(pvalue_matrix, na.rm = TRUE)
corr <- cbind(cor, pval[, 3])
names(corr) <- c("y", "x", "c", "z")
s <- ggplot2::ggplot(data = corr, ggplot2::aes(x, y, fill = c)) +
ggplot2::geom_tile() +
ggplot2::scale_fill_gradient2(
low = "blue", high = "red", mid = "white", midpoint = 0,
limit = c(-1, 1), space = "Lab", name = "Correlation"
) +
ggplot2::theme_minimal() +
ggplot2::theme(
axis.text.x = ggplot2::element_text(
angle = 45, vjust = 1, size = 12, hjust = 1
)
) +
ggplot2::coord_fixed() +
ggplot2::geom_text(
aes(
label = dplyr::case_when(
z > 0.01 & z <= 0.05 ~ "*",
z > 0.001 & z <= 0.01 ~ "**",
z <= 0.001 ~ "***",
TRUE ~ ""
)
),
color = "black", size = 10
)
print(s)
} else if (n == 2) {
cat("\nCorrelation Matrix:\n")
print(cor_matrix)
} else if (n == 3) {
cat("\nP-value Matrix:\n")
print(pvalue_matrix)
} else {
cat("Invalid value for 'n'. Please use 1 for heatmap, 2 for correlation matrix, or 3 for p-value matrix.")
}
}
df <- read_excel("原始数据.xlsx")
df1=df[,c(1:29)]
#df1=df1[-3,]
#df1=df[37:68,c(5,12:20,24:27)]
#df1=df[1:68,c(5,12:20,24:27)]
df1 <- subset(df1, group == "AN")
df2=df1[,c(4:27)]
chart.Correlation(df2,main = "Correlation Matrix",
xlab = "Variables",
ylab = "Variables",method ="spearman")
